server:
  port: 80
  servlet:
    encoding:
      charset: UTF-8
      force: true
spring:
  config:
    import: optional:file:.env[.properties]  # .env import
  mvc:
    view:
      prefix: /views/
      suffix: .jsp
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: ENC(idIWCdznEM3ggslDeTmLJw==)
  ai:
    vectorstore:
      pgvector:
        initialize-schema: true
    openai:
      api-key: ENC(zN8LCgmXLVIud/L3pNDAt8P9sP15oU09/cd/ila+ouA+O4Z0L8CsrurxI+DqlsaOyf1kIyZa6Tpp/nC+mkPGc6EcViQHnTTdXAhVq9aNPuvgRil0Ck7owB83oQoCnKdTT08eINqY1Bq25pWoaSLonpx1WHpJubw0bxRsR4ufOEwt+sg2NvoLWMHwf1y6tp+h9cDAewZWMioZ54QxPwq2jyWOOlXo3bKPPi2CZdMJBtM=)
      chat:
        options:
          model: gpt-4o
          temperature: 0.1
          max-tokens: 1000
mybatis:
  type-aliases-package: edu.sm.app.dto
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

logging:
  level:
    root: info

# Application Config
# @Value("${}")
app:
  key:
    skey: ${MY_KEY}
#    chatgpt: ENC(zN8LCgmXLVIud/L3pNDAt8P9sP15oU09/cd/ila+ouA+O4Z0L8CsrurxI+DqlsaOyf1kIyZa6Tpp/nC+mkPGc6EcViQHnTTdXAhVq9aNPuvgRil0Ck7owB83oQoCnKdTT08eINqY1Bq25pWoaSLonpx1WHpJubw0bxRsR4ufOEwt+sg2NvoLWMHwf1y6tp+h9cDAewZWMioZ54QxPwq2jyWOOlXo3bKPPi2CZdMJBtM=)
#    gemini: ENC(H2lYOh7lv2ptvQl2HOqwv8hwumZFoPhhyIYLhhakscQNicH35vGSOGaTzid1XxJx)


